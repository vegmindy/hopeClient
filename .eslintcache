[{"/Users/mindyvega/Desktop/blueBadgeProject/client/src/App.js":"1","/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Auth/Auth.jsx":"2","/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Search/Search.jsx":"3","/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Review/Review.jsx":"4","/Users/mindyvega/Desktop/blueBadgeProject/client/src/reportWebVitals.js":"5","/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Navbar/Navbar.jsx":"6","/Users/mindyvega/Desktop/blueBadgeProject/client/src/index.js":"7"},{"size":708,"mtime":1606772025913,"results":"8","hashOfConfig":"9"},{"size":3233,"mtime":1606795443043,"results":"10","hashOfConfig":"9"},{"size":7814,"mtime":1606772387331,"results":"11","hashOfConfig":"9"},{"size":1434,"mtime":1606830504466,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":1606157472123,"results":"13","hashOfConfig":"9"},{"size":2167,"mtime":1606764613277,"results":"14","hashOfConfig":"9"},{"size":590,"mtime":1606768606401,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nkwtfx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mindyvega/Desktop/blueBadgeProject/client/src/App.js",["31"],"/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Auth/Auth.jsx",[],"/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Search/Search.jsx",["32","33","34","35"],"import {useState, useEffect, Component} from 'react';\nimport {Container, Row, Col, Button, Input, InputGroup, InputGroupAddon, Modal, ModalHeader, ModalFooter, ModalBody} from 'reactstrap';\nimport './Search.css';\n// import {useState, useEffect} from 'react';\n// import SearchResults from './SearchResults/SearchResults';\n\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 1,\n            resultList: [],\n            searchValue: \"\",\n            gameModal: {\n                show: false,\n                name: \"Test Theft Cycle\",\n                desc: \"Test Theft Cycle is the next installment in non motorized pedestrian vechile theft game genre.  This will really knock your chains off.\"\n            }\n        }\n\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n        this.toggleGameDetailsModal = this.toggleGameDetailsModal.bind(this);\n    }\n\n    defaultLoad() {  //Called after page is loaded.\n        this.loadPage();\n    }\n\n    handleSearchChange(event) { //Called everytime you type a character into search bar\n        this.setState({\n            searchValue: event.target.value\n        })\n    }\n\n    handleSearchSubmit(event) { //Called when you hit the search button\n        this.searchGame(1);\n\n        event.preventDefault();\n    }\n\n    searchGame(pageNum) { //Used to lookup the search from our server and returns the resutls\n        let body = {\n            page: pageNum,\n            searchQuery: this.state.searchValue\n        }\n\n        fetch(`http://localhost:4001/search/`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body)\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data.results);\n                this.setState({\n                    resultList: data.results.map((item) => { return {name: item.name, backgroundImage: item.background_image, gameId: item.id}})\n                });\n            })\n            .catch(error => console.log(error));\n    }\n\n    loadPage() { //Loads a specific page, depending on search or just default load\n        let pageNum = this.state.page;\n\n        console.log(pageNum)\n\n        if (this.state.searchValue !== \"\") {\n            this.searchGame(pageNum);\n            return;\n        }\n\n        fetch(`http://localhost:4001/search/page/${pageNum}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data.results)\n                this.setState({\n                    resultList: data.results.map((item) => { return {name: item.name, backgroundImage: item.background_image, gameId: item.id}})\n                });\n            })\n            .catch(error => console.log(error));\n    }\n\n    changePage(amount) { //changes the page by a specific amount\n        let newPage = this.state.page + amount;\n\n        console.log(newPage)\n\n        if (newPage < 1) {\n            this.setState({\n                page: 1\n            }, () => {this.loadPage()})\n        } else {\n            this.setState({\n                page: newPage\n            }, () => {this.loadPage()})\n        }\n    }\n\n    showGameDetails(id) {\n        let tmpGameModal = this.state.gameModal;\n\n        fetch(`http://localhost:4001/search/game/${id}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data) //SHOWS US DATA FROM THE GAME WE CLICK ON\n\n                let gameObj = {\n                    name: data.name,\n                    desc: data.description_raw\n                }\n\n                let tmpGameModal = this.state.gameModal;\n\n                tmpGameModal.name = gameObj.name;\n                tmpGameModal.desc = gameObj.desc;\n\n                this.setState({ gameModal: tmpGameModal });\n\n                this.toggleGameDetailsModal();\n            })\n            .catch(error => console.log(error));\n    }\n\n    toggleGameDetailsModal() {\n        let tmpGameModal = this.state.gameModal;\n\n        tmpGameModal.show = !this.state.gameModal.show;\n\n        this.setState({ gameModal: tmpGameModal});\n    }\n\n    componentDidMount() {\n        this.defaultLoad();\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{height: '50px'}}>\n                    <div style={{backgroundColor: \"white\"}} className=\"fixed-top\">\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <InputGroup>\n                                        <Input style={{height: \"auto\"}} type=\"text\" value={this.state.searchValue} onChange={this.handleSearchChange} placeholder=\"Search...\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <Button onClick={this.handleSearchSubmit} type=\"button\">Submit</Button>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n                <Container style={{backgroundColor: \"white\"}}>\n                    {\n                        this.state.resultList.map((item) => {\n                            return <Row>\n                                <Col onClick={() => {this.showGameDetails(item.gameId)}}>\n                                    <div className=\"gameContainer\" style={{\n                                            backgroundImage: (item.backgroundImage !== null)\n                                             ? \"url('\" + item.backgroundImage +\"')\" : \"linear-gradient(135deg, #231437 0%, #2c385e 50%, #336e6b 100%)\"\n                                        }}>\n\n                                        <div className=\"gameTitle\">{item.name}</div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        })\n                    }\n                </Container>\n                <div>\n                    <div style={{height: '50px'}}>\n                        <div className=\"fixed-bottom\">\n                            <Container>\n                                <Row style={{backgroundColor: \"white\"}}>\n                                    <Col>\n                                        <Button className=\"float-left\" onClick={() => {this.changePage(-1)}} color=\"primary\">Previous</Button>\n                                    </Col>\n                                    <Col>\n                                        <Button className=\"float-right\" onClick={() => {this.changePage(1)}} color=\"primary\">Next</Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </div>\n                    </div>\n                </div>\n                <Container><Modal size=\"lg\" isOpen={this.state.gameModal.show} toggle={this.toggleGameDetailsModal} >\n                    <ModalHeader toggle={this.toggleGameDetailsModal}>{this.state.gameModal.name}</ModalHeader>\n                        <ModalBody>\n                            {this.state.gameModal.desc}\n                        </ModalBody>\n                    </Modal>\n                </Container>\n                \n            </div>\n        );\n    }\n}\n\nexport default Search;","/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Review/Review.jsx",[],"/Users/mindyvega/Desktop/blueBadgeProject/client/src/reportWebVitals.js",[],"/Users/mindyvega/Desktop/blueBadgeProject/client/src/Components/Navbar/Navbar.jsx",[],"/Users/mindyvega/Desktop/blueBadgeProject/client/src/index.js",[],{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":1,"column":9,"nodeType":"38","messageId":"39","endLine":1,"endColumn":17},{"ruleId":"36","severity":1,"message":"41","line":1,"column":19,"nodeType":"38","messageId":"39","endLine":1,"endColumn":28},{"ruleId":"36","severity":1,"message":"42","line":2,"column":94,"nodeType":"38","messageId":"39","endLine":2,"endColumn":105},{"ruleId":"36","severity":1,"message":"43","line":110,"column":13,"nodeType":"38","messageId":"39","endLine":110,"endColumn":25},"no-unused-vars","'Review' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'ModalFooter' is defined but never used.","'tmpGameModal' is assigned a value but never used."]