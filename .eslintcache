[{"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\Components\\Auth\\Auth.jsx":"1","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\App.js":"2","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\Components\\Review\\Review.jsx":"3","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\Components\\Search\\Search.jsx":"4","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\reportWebVitals.js":"5","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\index.js":"6"},{"size":3337,"mtime":1606331829680,"results":"7","hashOfConfig":"8"},{"size":564,"mtime":1606346756479,"results":"9","hashOfConfig":"8"},{"size":882,"mtime":1606331829726,"results":"10","hashOfConfig":"8"},{"size":7917,"mtime":1606608530240,"results":"11","hashOfConfig":"8"},{"size":375,"mtime":1606228413655,"results":"12","hashOfConfig":"8"},{"size":561,"mtime":1606599554755,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qp5oz4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\Components\\Auth\\Auth.jsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\App.js",["27"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\Components\\Review\\Review.jsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\Components\\Search\\Search.jsx",["28","29","30","31"],"import {useState, useEffect, Component} from 'react';\r\nimport {Container, Row, Col, Button, Input, InputGroup, InputGroupAddon, Modal, ModalHeader, ModalFooter, ModalBody} from 'reactstrap';\r\nimport './Search.css';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: 1,\r\n            resultList: [],\r\n            searchValue: \"\",\r\n            gameModal: {\r\n                show: false,\r\n                name: \"Test Theft Cycle\",\r\n                desc: \"Test Theft Cycle is the next installment in non motorized pedestrian vechile theft game genre.  This will really knock your chains off.\"\r\n            }\r\n        }\r\n\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\r\n        this.toggleGameDetailsModal = this.toggleGameDetailsModal.bind(this);\r\n    }\r\n\r\n    defaultLoad() {  //Called after page is loaded.\r\n        this.loadPage();\r\n    }\r\n\r\n    handleSearchChange(event) { //Called everytime you type a character into search bar\r\n        this.setState({\r\n            searchValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSearchSubmit(event) { //Called when you hit the search button\r\n        this.searchGame(1);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    searchGame(pageNum) { //Used to lookup the search from our server and returns the resutls\r\n        let body = {\r\n            page: pageNum,\r\n            searchQuery: this.state.searchValue\r\n        }\r\n\r\n        fetch(`http://localhost:4001/search/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.results);\r\n                this.setState({\r\n                    resultList: data.results.map((item) => { return {name: item.name, backgroundImage: item.background_image, gameId: item.id}})\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    loadPage() { //Loads a specific page, depending on search or just default load\r\n        let pageNum = this.state.page;\r\n\r\n        console.log(pageNum)\r\n\r\n        if (this.state.searchValue !== \"\") {\r\n            this.searchGame(pageNum);\r\n            return;\r\n        }\r\n\r\n        fetch(`http://localhost:4001/search/page/${pageNum}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.results)\r\n                this.setState({\r\n                    resultList: data.results.map((item) => { return {name: item.name, backgroundImage: item.background_image, gameId: item.id}})\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    changePage(amount) { //changes the page by a specific amount\r\n        let newPage = this.state.page + amount;\r\n\r\n        console.log(newPage)\r\n\r\n        if (newPage < 1) {\r\n            this.setState({\r\n                page: 1\r\n            }, () => {this.loadPage()})\r\n        } else {\r\n            this.setState({\r\n                page: newPage\r\n            }, () => {this.loadPage()})\r\n        }\r\n    }\r\n\r\n    showGameDetails(id) {\r\n        let tmpGameModal = this.state.gameModal;\r\n\r\n        fetch(`http://localhost:4001/search/game/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data) //SHOWS US DATA FROM THE GAME WE CLICK ON\r\n\r\n                let gameObj = {\r\n                    name: data.name,\r\n                    desc: data.description_raw\r\n                }\r\n\r\n                let tmpGameModal = this.state.gameModal;\r\n\r\n                tmpGameModal.name = gameObj.name;\r\n                tmpGameModal.desc = gameObj.desc;\r\n\r\n                this.setState({ gameModal: tmpGameModal });\r\n\r\n                this.toggleGameDetailsModal();\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    toggleGameDetailsModal() {\r\n        let tmpGameModal = this.state.gameModal;\r\n\r\n        tmpGameModal.show = !this.state.gameModal.show;\r\n\r\n        this.setState({ gameModal: tmpGameModal});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.defaultLoad();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{height: '50px'}}>\r\n                    <div style={{backgroundColor: \"white\"}} className=\"fixed-top\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <InputGroup>\r\n                                        <Input style={{height: \"auto\"}} type=\"text\" value={this.state.searchValue} onChange={this.handleSearchChange} placeholder=\"Search...\" />\r\n                                        <InputGroupAddon addonType=\"append\">\r\n                                            <Button onClick={this.handleSearchSubmit} type=\"button\">Submit</Button>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n                <Container style={{backgroundColor: \"white\"}}>\r\n                    {\r\n                        this.state.resultList.map((item) => {\r\n                            return <Row>\r\n                                <Col onClick={() => {this.showGameDetails(item.gameId)}}>\r\n                                    <div className=\"gameContainer\" style={{\r\n                                            backgroundImage: (item.backgroundImage !== null)\r\n                                             ? \"url('\" + item.backgroundImage +\"')\" : \"linear-gradient(135deg, #231437 0%, #2c385e 50%, #336e6b 100%)\"\r\n                                        }}>\r\n\r\n                                        <div className=\"gameTitle\">{item.name}</div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        })\r\n                    }\r\n                </Container>\r\n                <div>\r\n                    <div style={{height: '50px'}}>\r\n                        <div className=\"fixed-bottom\">\r\n                            <Container>\r\n                                <Row style={{backgroundColor: \"white\"}}>\r\n                                    <Col>\r\n                                        <Button className=\"float-left\" onClick={() => {this.changePage(-1)}} color=\"primary\">Previous</Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button className=\"float-right\" onClick={() => {this.changePage(1)}} color=\"primary\">Next</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Container><Modal size=\"lg\" isOpen={this.state.gameModal.show} toggle={this.toggleGameDetailsModal} >\r\n                    <ModalHeader toggle={this.toggleGameDetailsModal}>{this.state.gameModal.name}</ModalHeader>\r\n                        <ModalBody>\r\n                            {this.state.gameModal.desc}\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\reportWebVitals.js",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\BlueBadgeFinalProject\\hopeClient\\src\\index.js",[],{"ruleId":"32","severity":1,"message":"33","line":10,"column":9,"nodeType":"34","messageId":"35","endLine":10,"endColumn":22},{"ruleId":"32","severity":1,"message":"36","line":1,"column":9,"nodeType":"34","messageId":"35","endLine":1,"endColumn":17},{"ruleId":"32","severity":1,"message":"37","line":1,"column":19,"nodeType":"34","messageId":"35","endLine":1,"endColumn":28},{"ruleId":"32","severity":1,"message":"38","line":2,"column":94,"nodeType":"34","messageId":"35","endLine":2,"endColumn":105},{"ruleId":"32","severity":1,"message":"39","line":107,"column":13,"nodeType":"34","messageId":"35","endLine":107,"endColumn":25},"no-unused-vars","'viewConductor' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'ModalFooter' is defined but never used.","'tmpGameModal' is assigned a value but never used."]